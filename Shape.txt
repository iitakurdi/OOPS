// Superclass: Shape
abstract class Shape {
    // Abstract methods for calculating area and perimeter
    public abstract double area();
    public abstract double perimeter();
}

// Subclass: Circle
class Circle extends Shape {
    // Fields specific to Circle
    private double radius;
    private static final double PI = 3.14; // Constant approximation of π

    // Constructor
    public Circle(double radius) {
        this.radius = radius;
    }

    // Override the area method for Circle
    @Override
    public double area() {
        return PI * radius * radius; // Area of a circle: π * r^2 using approximation of π
    }

    // Override the perimeter method for Circle
    @Override
    public double perimeter() {
        return 2 * PI * radius; // Perimeter of a circle: 2 * π * r using approximation of π
    }
}

// Subclass: Triangle
class Triangle extends Shape {
    // Fields specific to Triangle
    private double base;
    private double height;
    private double side1;
    private double side2;
    private double side3;

    // Constructor
    public Triangle(double base, double height, double side1, double side2, double side3) {
        this.base = base;
        this.height = height;
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side3;
    }

    // Override the area method for Triangle
    @Override
    public double area() {
        return (base * height) / 2; // Area of a triangle: (base * height) / 2
    }

    // Override the perimeter method for Triangle
    @Override
    public double perimeter() {
        return side1 + side2 + side3; // Perimeter of a triangle: sum of all sides
    }
}

// Subclass: Square
class Square extends Shape {
    // Field specific to Square
    private double side;

    // Constructor
    public Square(double side) {
        this.side = side;
    }

    // Override the area method for Square
    @Override
    public double area() {
        return side * side; // Area of a square: side^2
    }

    // Override the perimeter method for Square
    @Override
    public double perimeter() {
        return 4 * side; // Perimeter of a square: 4 * side
    }
}

// Test class
public class  Main {
    public static void main(String[] args) {
        // Create a Circle object with radius 5
        Shape circle = new Circle(5);
        System.out.println("Circle area: " + circle.area());
        System.out.println("Circle perimeter: " + circle.perimeter());

        // Create a Triangle object with base 6, height 8, and sides 5, 6, 7
        Shape triangle = new Triangle(6, 8, 5, 6, 7);
        System.out.println("Triangle area: " + triangle.area());
        System.out.println("Triangle perimeter: " + triangle.perimeter());

        // Create a Square object with side length 4
        Shape square = new Square(4);
        System.out.println("Square area: " + square.area());
        System.out.println("Square perimeter: " + square.perimeter());
    }
}