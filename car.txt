// Superclass: Car
class Car {
    // Fields
    int speed;
    double regularPrice;
    String color;

    // Constructor
    public Car(int speed, double regularPrice, String color) {
        this.speed = speed;
        this.regularPrice = regularPrice;
        this.color = color;
    }

    // Method to get the sale price (to be overridden in subclasses)
    public double getSalePrice() {
        return regularPrice;
    }
}

// Subclass: Truck
class Truck extends Car {
    // Additional field specific to Truck
    int weight;

    // Constructor
    public Truck(int speed, double regularPrice, String color, int weight) {
        super(speed, regularPrice, color); // Call the superclass constructor
        this.weight = weight;
    }

    // Override the getSalePrice method for Truck
    @Override
    public double getSalePrice() {
        // Calculate discount based on weight
        if (weight > 2000) {
            // 10% discount if weight > 2000
            return regularPrice * 0.9;
        } else {
            // 20% discount otherwise
            return regularPrice * 0.8;
        }
    }
}

// Subclass: Ford
class Ford extends Car {
    // Additional fields specific to Ford
    int year;
    int manufacturerDiscount;

    // Constructor
    public Ford(int speed, double regularPrice, String color, int year, int manufacturerDiscount) {
        super(speed, regularPrice, color); // Call the superclass constructor
        this.year = year;
        this.manufacturerDiscount = manufacturerDiscount;
    }

    // Override the getSalePrice method for Ford
    @Override
    public double getSalePrice() {
        // Calculate sale price after subtracting manufacturer discount
        return super.getSalePrice() - manufacturerDiscount;
    }
}

// Subclass: Sedan
class Sedan extends Car {
    // Additional field specific to Sedan
    int length;

    // Constructor
    public Sedan(int speed, double regularPrice, String color, int length) {
        super(speed, regularPrice, color); // Call the superclass constructor
        this.length = length;
    }

    // Override the getSalePrice method for Sedan
    @Override
    public double getSalePrice() {
        // Calculate discount based on length
        if (length > 20) {
            // 5% discount if length > 20
            return regularPrice * 0.95;
        } else {
            // 10% discount otherwise
            return regularPrice * 0.9;
        }
    }
}

// Test class
public class CarTest {
    public static void main(String[] args) {
        // Create a Truck object
        Truck truck = new Truck(120, 30000.0, "Blue", 2500);
        System.out.println("Truck sale price: " + truck.getSalePrice());

        // Create a Ford object
        Ford ford = new Ford(150, 25000.0, "Red", 2022, 1000);
        System.out.println("Ford sale price: " + ford.getSalePrice());

        // Create a Sedan object
        Sedan sedan = new Sedan(140, 20000.0, "Black", 25);
        System.out.println("Sedan sale price: " + sedan.getSalePrice());
    }
}
